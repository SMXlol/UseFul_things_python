import telebot as telebot
from telebot import types
import time

bot = telebot.TeleBot(
    'token')  # –≤ TOKEN –º—ã –≤–≤–æ–¥–∏–º –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å–∞–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω.

chat_id_spam = 0
spam_message = "0"
forbidden_words = ['—Ö—Ée', 'xy–µ', '—Öy–π', 'xy–π', '—Ö—É–π', '–±–ª—è', '—Ö—É–µ', '–µ–±–∞', 'x—É–π', 'x—É–µ', 'e–±–∞', '–ø–∏–∑–¥', '–µ–±a', '–¥–æ—Ç–∞', '–µ–±a']  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤

user_mute_list = {}


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–º–æ—â—å")
    btn2 = types.KeyboardButton("‚ùì –ê —É —Å–æ–∑–¥–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ç–≥ –∫–∞–Ω–∞–ª???")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ...".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(commands=['help'])
def help(message):
    bot.reply_to(message,
                 "/kick - –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/mute - –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è\n/unmute - "
                 "—Ä–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/get_id - –ø–æ–ª—É—á–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º, id –≥—Ä—É–ø–ø—ã –∏ id  —á–µ–ª–æ–≤–µ–∫–∞\n/send_message - –æ—Ç–ø—Ä–∞–≤–∫–∞ "
                 "—Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É —á–µ—Ä–µ–∑ –±–æ—Ç–∞ (–î–æ—Å—Ç—É–ø–Ω–æ –Ω–µ –≤—Å–µ–º)")


@bot.message_handler(commands=['kick'])
def kick_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.kick_chat_member(chat_id, user_id)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –±—ã–ª –∫–∏–∫–Ω—É—Ç.")
    else:
        bot.reply_to(message,
                     "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫–∏–∫–Ω—É—Ç—å.")


@bot.message_handler(commands=['mute'])
def mute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id_get = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id_get).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            duration = 60  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - 1 –º–∏–Ω—É—Ç–∞
            args = message.text.split()[1:]
            if args:
                try:
                    duration = int(args[0])
                except ValueError:
                    bot.reply_to(message, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.")
                    return
                if duration < 1:
                    bot.reply_to(message, "–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
                    return
                if duration > 1440:
                    bot.reply_to(message, "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è - 1 –¥–µ–Ω—å.")
                    return
            bot.restrict_chat_member(chat_id, user_id_get, can_send_messages=False, can_send_media_messages=False,
                                     can_send_other_messages=False, can_add_web_page_previews=False)
            bot.reply_to(message,
                         f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration} –º–∏–Ω—É—Ç.")
    else:
        bot.reply_to(message,
                     "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å.")


@bot.message_handler(commands=['unmute'])
def unmute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        bot.restrict_chat_member(chat_id, user_id, can_send_messages=True, can_send_media_messages=True,
                                 can_send_other_messages=True, can_add_web_page_previews=True)
        bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} —Ä–∞–∑–º—É—á–µ–Ω.")
    else:
        bot.reply_to(message,
                     "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º—É—Ç–∏—Ç—å.")


@bot.message_handler(commands=['send_message'])
def spam_input(message):
    if message.chat.type == 'group' or message.chat.type == 'supergroup':
        bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–Ω—É—é –ø–µ—Ä–µ–ø–∏—Å–∫—É —Å –±–æ—Ç–æ–º")

    else:
        if message.from_user.username == "re_smx":
            sent = bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ id –≥—Ä—É–ø–ø—ã")
            bot.register_next_step_handler(sent, get_id)
        else:
            bot.reply_to(message, "–í—ã –¥–æ–ª–∂–Ω—ã –æ–±–ª–∞–¥–∞—Ç—å –ø—Ä–∞–≤–∞–º–∏ —Å—É–ø–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")


def get_id(message):
    global chat_id_spam
    chat_id_spam = message.text
    sent = bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Çe —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–ø–∞–º–∏—Ç—å")
    bot.register_next_step_handler(sent, spam_message1)
    return chat_id_spam


def spam_message1(message):
    global spam_message
    spam_message = str(message.text)
    sent = bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Çe –∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π")
    bot.register_next_step_handler(sent, cout)


def cout(message):
    x = 0
    spam = int(message.text)
    print("GG", spam)
    print("GG", spam_message)
    print('GG', chat_id_spam)
    user_id = message.from_user.username
    print(user_id)
    chat_id = chat_id_spam
    for i in range(spam):
        bot.send_message(chat_id=chat_id, text=spam_message)
        time.sleep(2)
        x = x + 1
    j = str(x)
    bot.send_message(message.from_user.id, "–°–ø–∞–º –∑–∞–≤–µ—Ä—à—ë–Ω!")
    bot.send_message(message.from_user.id, j)


# –ø–æ–ª—É—á–∞–µ–º –∞–π –¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —á–∞—Ç–∞
@bot.message_handler(commands=['get_id'])
def user_id(message):
    if message.reply_to_message:
        user_id_get = message.reply_to_message.from_user.id
        chat_id_get = message.chat.id
        bot.send_message(chat_id_get,
                         f'id —á–∞—Ç–∞: {chat_id_get}, id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.reply_to_message.from_user.username}: {user_id_get}')


@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == "üëã –ü–æ–º–æ—â—å":
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç... –î–µ—Ä–∂–∏ –ø–æ–º–æ—â—å!!!)")
        help(message)
    elif message.text == "‚ùì –ê —É —Å–æ–∑–¥–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ç–≥ –∫–∞–Ω–∞–ª???":
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton("–ö–∞–Ω–∞–ª S(MI)X", url='https://t.me/SMXrehub')
        markup.add(button1)
        bot.send_message(message.chat.id,
                         "–ü—Ä–∏–≤–µ—Ç, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –≤ —Ç–≥ –∫–∞–Ω–∞–ª))))".format(message.from_user),
                         reply_markup=markup)
    else:
        filePath = 'chat_history.txt'
        file = open(filePath, 'a')
        message_user = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –≤ –≥—Ä—É–ø–ø–µ <<{message.chat.title}>> –ø–∏—à–µ—Ç: {message.text}  "
        file.write(message_user)
        file.write("\n")
    check_forbidden_words(message)


def check_forbidden_words(message):
    user_id_get = message.from_user.id
    user_text = message.text.lower()

    if any(word in user_text for word in forbidden_words):
        bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        bot.send_message(message.chat.id,
                         f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –∑–∞–º—É—á–µ–Ω –Ω–∞ —á–∞—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤.")
        chat_id = message.chat.id
        mute_user_1(user_id_get, chat_id)


def mute_user_1(user_id_get, chat_id):
    user_status = bot.get_chat_member(chat_id, user_id_get).status
    if user_status == 'administrator' or user_status == 'creator':
        bot.send_message("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
    else:
        bot.restrict_chat_member(chat_id, user_id_get, can_send_messages=False, can_send_media_messages=False,
                                 can_send_other_messages=False, can_add_web_page_previews=False)


bot.infinity_polling(none_stop=True, interval=0)
